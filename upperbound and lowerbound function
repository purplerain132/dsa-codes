#include <iostream>
using namespace std;

int* upbound(int* a,int u,int n){
    int i = 0,j = u-1;
    int mid;
    while(i<=j){
        mid = (i+j)/2;
        if(a[mid]==n){
            return &a[mid+1];
        }
        if(a[mid]>n){
            j = mid - 1;
        }
        else{
            i = mid+1;
        }
    }
    
    return &a[i];
}
int* lobound(int* a,int u,int n){
    int i = 0,j = u-1;
    int mid;
    while(i<=j){
        mid = (i+j)/2;
        if(a[mid]==n){
            return &a[mid];
        }
        if(a[mid]>n){
            j = mid - 1;
        }
        else{
            i = mid+1;
        }
    }
    
    return &a[i];
}


int main() {
    int arr[] = {2,4,5,6,9,10};
    int n = sizeof(arr)/sizeof(arr[0]);
    cout<<upbound(arr,n,9)-arr<<endl;
    cout<<lobound(arr,n,9)-arr;

    return 0;
}
